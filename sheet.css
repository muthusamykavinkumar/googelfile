1) file name (top).
2) name,message,ect.
3)EXTENSION click and choose (APP SCRIPT).
4)change the file name.
5)copy the program and past it.
6)save the program.
7)deploye click and (click NEW DEPLOYEMENT).
8)click seting and (select the web)
9)copy the link.
10)copy the program and change the google sheet name in FORM and SCRIPT
 example
    const scriptURL = 'https://script.google.com/macros/s/AKfycbxaq8a52Emm4-KwpSgvSN-BpR11SK2WaRxGGk_1lMGugURWT_UYUAIljt2Hd9JeRP2a/exec'
    const form = document.forms['portfolio']


google shet code

const sheetName = 'Sheet1'
const scriptProp = PropertiesService.getScriptProperties()

function intialSetup () {
  const activeSpreadsheet = SpreadsheetApp.getActiveSpreadsheet()
  scriptProp.setProperty('key', activeSpreadsheet.getId())
}

function doPost (e) {
  const lock = LockService.getScriptLock()
  lock.tryLock(10000)

  try {
    const doc = SpreadsheetApp.openById(scriptProp.getProperty('key'))
    const sheet = doc.getSheetByName(sheetName)

    const headers = sheet.getRange(1, 1, 1, sheet.getLastColumn()).getValues()[0]
    const nextRow = sheet.getLastRow() + 1

    const newRow = headers.map(function(header) {
      return header === 'Date' ? new Date() : e.parameter[header]
    })

    sheet.getRange(nextRow, 1, 1, newRow.length).setValues([newRow])

    return ContentService
      .createTextOutput(JSON.stringify({ 'result': 'success', 'row': nextRow }))
      .setMimeType(ContentService.MimeType.JSON)
  }

  catch (e) {
    return ContentService
      .createTextOutput(JSON.stringify({ 'result': 'error', 'error': e }))
      .setMimeType(ContentService.MimeType.JSON)
  }

  finally {
    lock.releaseLock()
  }
}
